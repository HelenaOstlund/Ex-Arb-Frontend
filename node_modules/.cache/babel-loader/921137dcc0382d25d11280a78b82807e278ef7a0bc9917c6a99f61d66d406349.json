{"ast":null,"code":"import _slicedToArray from\"/Volumes/Dev/Examensarbete/Ex-Arb-Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import\"../Style.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TemperatureConverter(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),convertedValue=_useState4[0],setConvertedValue=_useState4[1];var _useState5=useState(\"fahrenheitToCelsius\"),_useState6=_slicedToArray(_useState5,2),conversionMode=_useState6[0],setConversionMode=_useState6[1];function handleInputChange(event){var value=parseFloat(event.target.value);setInputValue(value);}function convertFahrenheitToCelsius(fahrenheit){var celsius=(fahrenheit-32)*5/9;return celsius;}function convertCelsiusToFahrenheit(celsius){var fahrenheit=celsius*9/5+32;return fahrenheit;}function handleConversion(){if(conversionMode===\"fahrenheitToCelsius\"){var _convertedValue=convertFahrenheitToCelsius(inputValue);setConvertedValue(_convertedValue);}else if(conversionMode===\"celsiusToFahrenheit\"){var _convertedValue2=convertCelsiusToFahrenheit(inputValue);setConvertedValue(_convertedValue2);}}function handleModeChange(event){var mode=event.target.value;setConversionMode(mode);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Oven Temperature Converter\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"unit-converter\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Temperature:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:inputValue,onChange:handleInputChange})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Convert from:\",/*#__PURE__*/_jsxs(\"select\",{value:conversionMode,onChange:handleModeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"fahrenheitToCelsius\",children:\"Fahrenheit to Celsius\"}),/*#__PURE__*/_jsx(\"option\",{value:\"celsiusToFahrenheit\",children:\"Celsius to Fahrenheit\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:handleConversion,children:\"Convert\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Converted Temperature: \",convertedValue,\" \",conversionMode===\"fahrenheitToCelsius\"?\"째C\":\"째F\"]})})]})]});}export default TemperatureConverter;","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","TemperatureConverter","_useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","convertedValue","setConvertedValue","_useState5","_useState6","conversionMode","setConversionMode","handleInputChange","event","value","parseFloat","target","convertFahrenheitToCelsius","fahrenheit","celsius","convertCelsiusToFahrenheit","handleConversion","handleModeChange","mode","children","className","type","onChange","onClick"],"sources":["/Volumes/Dev/Examensarbete/Ex-Arb-Frontend/src/Components/TemperatureConverter.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"../Style.css\";\n\nfunction TemperatureConverter() {\n    const [inputValue, setInputValue] = useState(0);\n    const [convertedValue, setConvertedValue] = useState(0);\n    const [conversionMode, setConversionMode] = useState(\"fahrenheitToCelsius\");\n\n    function handleInputChange(event) {\n        const value = parseFloat(event.target.value);\n        setInputValue(value);\n    }\n\n    function convertFahrenheitToCelsius(fahrenheit) {\n        const celsius = ((fahrenheit - 32) * 5) / 9;\n        return celsius;\n    }\n\n    function convertCelsiusToFahrenheit(celsius) {\n        const fahrenheit = (celsius * 9) / 5 + 32;\n        return fahrenheit;\n    }\n\n    function handleConversion() {\n        if (conversionMode === \"fahrenheitToCelsius\") {\n            const convertedValue = convertFahrenheitToCelsius(inputValue);\n            setConvertedValue(convertedValue);\n        } else if (conversionMode === \"celsiusToFahrenheit\") {\n            const convertedValue = convertCelsiusToFahrenheit(inputValue);\n            setConvertedValue(convertedValue);\n        }\n    }\n\n    function handleModeChange(event) {\n        const mode = event.target.value;\n        setConversionMode(mode);\n    }\n\n    return (\n        <div>\n            <h1>Oven Temperature Converter</h1>\n            <div className=\"unit-converter\">\n                <div>\n                    <label>\n                        Temperature:\n                        <input\n                            type=\"number\"\n                            value={inputValue}\n                            onChange={handleInputChange}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Convert from:\n                        <select value={conversionMode} onChange={handleModeChange}>\n                            <option value=\"fahrenheitToCelsius\">Fahrenheit to Celsius</option>\n                            <option value=\"celsiusToFahrenheit\">Celsius to Fahrenheit</option>\n                        </select>\n                    </label>\n                </div>\n                <div>\n                    <button onClick={handleConversion}>Convert</button>\n                </div>\n                <div>\n                    <p>\n                        Converted Temperature: {convertedValue}{\" \"}\n                        {conversionMode === \"fahrenheitToCelsius\" ? \"째C\" : \"째F\"}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TemperatureConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}