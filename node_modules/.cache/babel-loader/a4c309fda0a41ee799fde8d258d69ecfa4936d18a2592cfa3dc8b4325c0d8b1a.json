{"ast":null,"code":"var _jsxFileName = \"/Volumes/Dev/Examensarbete/Ex-Arb-Frontend/src/Pages/Unitconverter.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UnitInput from \"./UnitInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UnitConverter() {\n  _s();\n  const [units, setUnits] = useState([]);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [conversionRate, setConversionRate] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/v1/auth/getAllUnits').then(response => {\n      setUnits(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleUnitChange = event => {\n    const selectedUnit = units.find(unit => unit.id === Number(event.target.value));\n    setSelectedUnit(selectedUnit);\n    setConversionRate(selectedUnit.conversionRate);\n  };\n  const handleInputChange = event => {\n    const input = event.target.value;\n    console.log(`Input value: ${input}, Conversion rate: ${conversionRate}`);\n    // Perform the conversion here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Unit Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"unit-selector\",\n      children: \"Select a unit:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"unit-selector\",\n      onChange: handleUnitChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a unit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: unit.id,\n        children: unit.unitName\n      }, unit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), selectedUnit && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected unit: \", selectedUnit.unitName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(UnitConverter, \"jaXJ6b+aiu9PsjziAz9CQCFw2FA=\");\n_c = UnitConverter;\nexport default UnitConverter;\nvar _c;\n$RefreshReg$(_c, \"UnitConverter\");","map":{"version":3,"names":["React","useState","useEffect","axios","UnitInput","jsxDEV","_jsxDEV","UnitConverter","_s","units","setUnits","selectedUnit","setSelectedUnit","conversionRate","setConversionRate","get","then","response","data","console","log","catch","error","handleUnitChange","event","find","unit","id","Number","target","value","handleInputChange","input","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","map","unitName","type","_c","$RefreshReg$"],"sources":["/Volumes/Dev/Examensarbete/Ex-Arb-Frontend/src/Pages/Unitconverter.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UnitInput from \"./UnitInput\";\n\nfunction UnitConverter() {\n    const [units, setUnits] = useState([]);\n    const [selectedUnit, setSelectedUnit] = useState(null);\n    const [conversionRate, setConversionRate] = useState(null);\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/api/v1/auth/getAllUnits')\n            .then(response => {\n                setUnits(response.data);\n                console.log(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    const handleUnitChange = event => {\n        const selectedUnit = units.find(unit => unit.id === Number(event.target.value));\n        setSelectedUnit(selectedUnit);\n        setConversionRate(selectedUnit.conversionRate);\n    };\n\n    const handleInputChange = event => {\n        const input = event.target.value;\n        console.log(`Input value: ${input}, Conversion rate: ${conversionRate}`);\n        // Perform the conversion here\n    };\n\n    return (\n        <div>\n            <h1>Unit Converter</h1>\n            <label htmlFor=\"unit-selector\">Select a unit:</label>\n            <select id=\"unit-selector\" onChange={handleUnitChange}>\n                <option value=\"\">Select a unit</option>\n                {units.map(unit => (\n                    <option key={unit.id} value={unit.id}>{unit.unitName}</option>\n                ))}\n            </select>\n            {selectedUnit && (\n                <div>\n                    <p>Selected unit: {selectedUnit.unitName}</p>\n                    <input type=\"number\" onChange={handleInputChange} />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default UnitConverter;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACY,GAAG,CAAC,+CAA+C,CAAC,CACrDC,IAAI,CAACC,QAAQ,IAAI;MACdP,QAAQ,CAACO,QAAQ,CAACC,IAAI,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;IAC9B,MAAMb,YAAY,GAAGF,KAAK,CAACgB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKC,MAAM,CAACJ,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC,CAAC;IAC/ElB,eAAe,CAACD,YAAY,CAAC;IAC7BG,iBAAiB,CAACH,YAAY,CAACE,cAAc,CAAC;EAClD,CAAC;EAED,MAAMkB,iBAAiB,GAAGP,KAAK,IAAI;IAC/B,MAAMQ,KAAK,GAAGR,KAAK,CAACK,MAAM,CAACC,KAAK;IAChCX,OAAO,CAACC,GAAG,CAAE,gBAAeY,KAAM,sBAAqBnB,cAAe,EAAC,CAAC;IACxE;EACJ,CAAC;;EAED,oBACIP,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvB/B,OAAA;MAAOgC,OAAO,EAAC,eAAe;MAAAL,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACrD/B,OAAA;MAAQqB,EAAE,EAAC,eAAe;MAACY,QAAQ,EAAEhB,gBAAiB;MAAAU,QAAA,gBAClD3B,OAAA;QAAQwB,KAAK,EAAC,EAAE;QAAAG,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACtC5B,KAAK,CAAC+B,GAAG,CAACd,IAAI,iBACXpB,OAAA;QAAsBwB,KAAK,EAAEJ,IAAI,CAACC,EAAG;QAAAM,QAAA,EAAEP,IAAI,CAACe;MAAQ,GAAvCf,IAAI,CAACC,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,EACR1B,YAAY,iBACTL,OAAA;MAAA2B,QAAA,gBACI3B,OAAA;QAAA2B,QAAA,GAAG,iBAAe,EAACtB,YAAY,CAAC8B,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC7C/B,OAAA;QAAOoC,IAAI,EAAC,QAAQ;QAACH,QAAQ,EAAER;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd;AAAC7B,EAAA,CA9CQD,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAgDtB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}